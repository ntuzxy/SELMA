// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tn_message.proto

#ifndef PROTOBUF_tn_5fmessage_2eproto__INCLUDED
#define PROTOBUF_tn_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace tn {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_tn_5fmessage_2eproto();
void protobuf_AssignDesc_tn_5fmessage_2eproto();
void protobuf_ShutdownFile_tn_5fmessage_2eproto();

class Tracker_Min_Update;
class Tracker_Max_Update;
class Tracker_Status_Update;
class Confidence_Update;
class Message;

enum Message_Type {
  TMin = 0,
  TMax = 1,
  TStatus = 2,
  Conf = 3
};
bool Message_Type_IsValid(int value);
const Message_Type Message_Type_MIN = TMin;
const Message_Type Message_Type_MAX = Conf;
const int Message_Type_ARRAYSIZE = Message_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Message_Type_descriptor();
inline const ::std::string& Message_Type_Name(Message_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Message_Type_descriptor(), value);
}
inline bool Message_Type_Parse(
    const ::std::string& name, Message_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message_Type>(
    Message_Type_descriptor(), name, value);
}
// ===================================================================

class Tracker_Min_Update : public ::google::protobuf::Message {
 public:
  Tracker_Min_Update();
  virtual ~Tracker_Min_Update();

  Tracker_Min_Update(const Tracker_Min_Update& from);

  inline Tracker_Min_Update& operator=(const Tracker_Min_Update& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tracker_Min_Update& default_instance();

  void Swap(Tracker_Min_Update* other);

  // implements Message ----------------------------------------------

  Tracker_Min_Update* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tracker_Min_Update& from);
  void MergeFrom(const Tracker_Min_Update& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // required int32 y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tn.Tracker_Min_Update)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_tn_5fmessage_2eproto();
  friend void protobuf_AssignDesc_tn_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_tn_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static Tracker_Min_Update* default_instance_;
};
// -------------------------------------------------------------------

class Tracker_Max_Update : public ::google::protobuf::Message {
 public:
  Tracker_Max_Update();
  virtual ~Tracker_Max_Update();

  Tracker_Max_Update(const Tracker_Max_Update& from);

  inline Tracker_Max_Update& operator=(const Tracker_Max_Update& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tracker_Max_Update& default_instance();

  void Swap(Tracker_Max_Update* other);

  // implements Message ----------------------------------------------

  Tracker_Max_Update* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tracker_Max_Update& from);
  void MergeFrom(const Tracker_Max_Update& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // required int32 y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tn.Tracker_Max_Update)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_tn_5fmessage_2eproto();
  friend void protobuf_AssignDesc_tn_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_tn_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static Tracker_Max_Update* default_instance_;
};
// -------------------------------------------------------------------

class Tracker_Status_Update : public ::google::protobuf::Message {
 public:
  Tracker_Status_Update();
  virtual ~Tracker_Status_Update();

  Tracker_Status_Update(const Tracker_Status_Update& from);

  inline Tracker_Status_Update& operator=(const Tracker_Status_Update& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tracker_Status_Update& default_instance();

  void Swap(Tracker_Status_Update* other);

  // implements Message ----------------------------------------------

  Tracker_Status_Update* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tracker_Status_Update& from);
  void MergeFrom(const Tracker_Status_Update& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required bool is_active = 2;
  inline bool has_is_active() const;
  inline void clear_is_active();
  static const int kIsActiveFieldNumber = 2;
  inline bool is_active() const;
  inline void set_is_active(bool value);

  // @@protoc_insertion_point(class_scope:tn.Tracker_Status_Update)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_is_active();
  inline void clear_has_is_active();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  bool is_active_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_tn_5fmessage_2eproto();
  friend void protobuf_AssignDesc_tn_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_tn_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static Tracker_Status_Update* default_instance_;
};
// -------------------------------------------------------------------

class Confidence_Update : public ::google::protobuf::Message {
 public:
  Confidence_Update();
  virtual ~Confidence_Update();

  Confidence_Update(const Confidence_Update& from);

  inline Confidence_Update& operator=(const Confidence_Update& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Confidence_Update& default_instance();

  void Swap(Confidence_Update* other);

  // implements Message ----------------------------------------------

  Confidence_Update* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Confidence_Update& from);
  void MergeFrom(const Confidence_Update& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 unknown = 2;
  inline bool has_unknown() const;
  inline void clear_unknown();
  static const int kUnknownFieldNumber = 2;
  inline ::google::protobuf::uint32 unknown() const;
  inline void set_unknown(::google::protobuf::uint32 value);

  // required uint32 human = 3;
  inline bool has_human() const;
  inline void clear_human();
  static const int kHumanFieldNumber = 3;
  inline ::google::protobuf::uint32 human() const;
  inline void set_human(::google::protobuf::uint32 value);

  // required uint32 wheeled_veh = 4;
  inline bool has_wheeled_veh() const;
  inline void clear_wheeled_veh();
  static const int kWheeledVehFieldNumber = 4;
  inline ::google::protobuf::uint32 wheeled_veh() const;
  inline void set_wheeled_veh(::google::protobuf::uint32 value);

  // required uint32 tracked_veh = 5;
  inline bool has_tracked_veh() const;
  inline void clear_tracked_veh();
  static const int kTrackedVehFieldNumber = 5;
  inline ::google::protobuf::uint32 tracked_veh() const;
  inline void set_tracked_veh(::google::protobuf::uint32 value);

  // required uint32 car = 6;
  inline bool has_car() const;
  inline void clear_car();
  static const int kCarFieldNumber = 6;
  inline ::google::protobuf::uint32 car() const;
  inline void set_car(::google::protobuf::uint32 value);

  // required uint32 van = 7;
  inline bool has_van() const;
  inline void clear_van();
  static const int kVanFieldNumber = 7;
  inline ::google::protobuf::uint32 van() const;
  inline void set_van(::google::protobuf::uint32 value);

  // required uint32 bike = 8;
  inline bool has_bike() const;
  inline void clear_bike();
  static const int kBikeFieldNumber = 8;
  inline ::google::protobuf::uint32 bike() const;
  inline void set_bike(::google::protobuf::uint32 value);

  // required uint32 bus = 9;
  inline bool has_bus() const;
  inline void clear_bus();
  static const int kBusFieldNumber = 9;
  inline ::google::protobuf::uint32 bus() const;
  inline void set_bus(::google::protobuf::uint32 value);

  // required uint32 truck = 10;
  inline bool has_truck() const;
  inline void clear_truck();
  static const int kTruckFieldNumber = 10;
  inline ::google::protobuf::uint32 truck() const;
  inline void set_truck(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tn.Confidence_Update)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_unknown();
  inline void clear_has_unknown();
  inline void set_has_human();
  inline void clear_has_human();
  inline void set_has_wheeled_veh();
  inline void clear_has_wheeled_veh();
  inline void set_has_tracked_veh();
  inline void clear_has_tracked_veh();
  inline void set_has_car();
  inline void clear_has_car();
  inline void set_has_van();
  inline void clear_has_van();
  inline void set_has_bike();
  inline void clear_has_bike();
  inline void set_has_bus();
  inline void clear_has_bus();
  inline void set_has_truck();
  inline void clear_has_truck();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 unknown_;
  ::google::protobuf::uint32 human_;
  ::google::protobuf::uint32 wheeled_veh_;
  ::google::protobuf::uint32 tracked_veh_;
  ::google::protobuf::uint32 car_;
  ::google::protobuf::uint32 van_;
  ::google::protobuf::uint32 bike_;
  ::google::protobuf::uint32 bus_;
  ::google::protobuf::uint32 truck_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_tn_5fmessage_2eproto();
  friend void protobuf_AssignDesc_tn_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_tn_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static Confidence_Update* default_instance_;
};
// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  Message* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .tn.Message_Type msg_type = 1;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  inline ::tn::Message_Type msg_type() const;
  inline void set_msg_type(::tn::Message_Type value);

  // optional .tn.Tracker_Min_Update t_min = 2;
  inline bool has_t_min() const;
  inline void clear_t_min();
  static const int kTMinFieldNumber = 2;
  inline const ::tn::Tracker_Min_Update& t_min() const;
  inline ::tn::Tracker_Min_Update* mutable_t_min();
  inline ::tn::Tracker_Min_Update* release_t_min();
  inline void set_allocated_t_min(::tn::Tracker_Min_Update* t_min);

  // optional .tn.Tracker_Max_Update t_max = 3;
  inline bool has_t_max() const;
  inline void clear_t_max();
  static const int kTMaxFieldNumber = 3;
  inline const ::tn::Tracker_Max_Update& t_max() const;
  inline ::tn::Tracker_Max_Update* mutable_t_max();
  inline ::tn::Tracker_Max_Update* release_t_max();
  inline void set_allocated_t_max(::tn::Tracker_Max_Update* t_max);

  // optional .tn.Tracker_Status_Update t_status = 4;
  inline bool has_t_status() const;
  inline void clear_t_status();
  static const int kTStatusFieldNumber = 4;
  inline const ::tn::Tracker_Status_Update& t_status() const;
  inline ::tn::Tracker_Status_Update* mutable_t_status();
  inline ::tn::Tracker_Status_Update* release_t_status();
  inline void set_allocated_t_status(::tn::Tracker_Status_Update* t_status);

  // optional .tn.Confidence_Update conf = 5;
  inline bool has_conf() const;
  inline void clear_conf();
  static const int kConfFieldNumber = 5;
  inline const ::tn::Confidence_Update& conf() const;
  inline ::tn::Confidence_Update* mutable_conf();
  inline ::tn::Confidence_Update* release_conf();
  inline void set_allocated_conf(::tn::Confidence_Update* conf);

  // @@protoc_insertion_point(class_scope:tn.Message)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_t_min();
  inline void clear_has_t_min();
  inline void set_has_t_max();
  inline void clear_has_t_max();
  inline void set_has_t_status();
  inline void clear_has_t_status();
  inline void set_has_conf();
  inline void clear_has_conf();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::tn::Tracker_Min_Update* t_min_;
  ::tn::Tracker_Max_Update* t_max_;
  ::tn::Tracker_Status_Update* t_status_;
  ::tn::Confidence_Update* conf_;
  int msg_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_tn_5fmessage_2eproto();
  friend void protobuf_AssignDesc_tn_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_tn_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static Message* default_instance_;
};
// ===================================================================


// ===================================================================

// Tracker_Min_Update

// required int32 id = 1;
inline bool Tracker_Min_Update::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tracker_Min_Update::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tracker_Min_Update::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tracker_Min_Update::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Tracker_Min_Update::id() const {
  return id_;
}
inline void Tracker_Min_Update::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 x = 2;
inline bool Tracker_Min_Update::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Tracker_Min_Update::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Tracker_Min_Update::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Tracker_Min_Update::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Tracker_Min_Update::x() const {
  return x_;
}
inline void Tracker_Min_Update::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
}

// required int32 y = 3;
inline bool Tracker_Min_Update::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Tracker_Min_Update::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Tracker_Min_Update::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Tracker_Min_Update::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Tracker_Min_Update::y() const {
  return y_;
}
inline void Tracker_Min_Update::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// Tracker_Max_Update

// required int32 id = 1;
inline bool Tracker_Max_Update::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tracker_Max_Update::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tracker_Max_Update::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tracker_Max_Update::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Tracker_Max_Update::id() const {
  return id_;
}
inline void Tracker_Max_Update::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 x = 2;
inline bool Tracker_Max_Update::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Tracker_Max_Update::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Tracker_Max_Update::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Tracker_Max_Update::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Tracker_Max_Update::x() const {
  return x_;
}
inline void Tracker_Max_Update::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
}

// required int32 y = 3;
inline bool Tracker_Max_Update::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Tracker_Max_Update::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Tracker_Max_Update::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Tracker_Max_Update::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Tracker_Max_Update::y() const {
  return y_;
}
inline void Tracker_Max_Update::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// Tracker_Status_Update

// required int32 id = 1;
inline bool Tracker_Status_Update::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tracker_Status_Update::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tracker_Status_Update::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tracker_Status_Update::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Tracker_Status_Update::id() const {
  return id_;
}
inline void Tracker_Status_Update::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required bool is_active = 2;
inline bool Tracker_Status_Update::has_is_active() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Tracker_Status_Update::set_has_is_active() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Tracker_Status_Update::clear_has_is_active() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Tracker_Status_Update::clear_is_active() {
  is_active_ = false;
  clear_has_is_active();
}
inline bool Tracker_Status_Update::is_active() const {
  return is_active_;
}
inline void Tracker_Status_Update::set_is_active(bool value) {
  set_has_is_active();
  is_active_ = value;
}

// -------------------------------------------------------------------

// Confidence_Update

// required uint32 id = 1;
inline bool Confidence_Update::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Confidence_Update::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Confidence_Update::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Confidence_Update::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Confidence_Update::id() const {
  return id_;
}
inline void Confidence_Update::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 unknown = 2;
inline bool Confidence_Update::has_unknown() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Confidence_Update::set_has_unknown() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Confidence_Update::clear_has_unknown() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Confidence_Update::clear_unknown() {
  unknown_ = 0u;
  clear_has_unknown();
}
inline ::google::protobuf::uint32 Confidence_Update::unknown() const {
  return unknown_;
}
inline void Confidence_Update::set_unknown(::google::protobuf::uint32 value) {
  set_has_unknown();
  unknown_ = value;
}

// required uint32 human = 3;
inline bool Confidence_Update::has_human() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Confidence_Update::set_has_human() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Confidence_Update::clear_has_human() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Confidence_Update::clear_human() {
  human_ = 0u;
  clear_has_human();
}
inline ::google::protobuf::uint32 Confidence_Update::human() const {
  return human_;
}
inline void Confidence_Update::set_human(::google::protobuf::uint32 value) {
  set_has_human();
  human_ = value;
}

// required uint32 wheeled_veh = 4;
inline bool Confidence_Update::has_wheeled_veh() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Confidence_Update::set_has_wheeled_veh() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Confidence_Update::clear_has_wheeled_veh() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Confidence_Update::clear_wheeled_veh() {
  wheeled_veh_ = 0u;
  clear_has_wheeled_veh();
}
inline ::google::protobuf::uint32 Confidence_Update::wheeled_veh() const {
  return wheeled_veh_;
}
inline void Confidence_Update::set_wheeled_veh(::google::protobuf::uint32 value) {
  set_has_wheeled_veh();
  wheeled_veh_ = value;
}

// required uint32 tracked_veh = 5;
inline bool Confidence_Update::has_tracked_veh() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Confidence_Update::set_has_tracked_veh() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Confidence_Update::clear_has_tracked_veh() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Confidence_Update::clear_tracked_veh() {
  tracked_veh_ = 0u;
  clear_has_tracked_veh();
}
inline ::google::protobuf::uint32 Confidence_Update::tracked_veh() const {
  return tracked_veh_;
}
inline void Confidence_Update::set_tracked_veh(::google::protobuf::uint32 value) {
  set_has_tracked_veh();
  tracked_veh_ = value;
}

// required uint32 car = 6;
inline bool Confidence_Update::has_car() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Confidence_Update::set_has_car() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Confidence_Update::clear_has_car() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Confidence_Update::clear_car() {
  car_ = 0u;
  clear_has_car();
}
inline ::google::protobuf::uint32 Confidence_Update::car() const {
  return car_;
}
inline void Confidence_Update::set_car(::google::protobuf::uint32 value) {
  set_has_car();
  car_ = value;
}

// required uint32 van = 7;
inline bool Confidence_Update::has_van() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Confidence_Update::set_has_van() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Confidence_Update::clear_has_van() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Confidence_Update::clear_van() {
  van_ = 0u;
  clear_has_van();
}
inline ::google::protobuf::uint32 Confidence_Update::van() const {
  return van_;
}
inline void Confidence_Update::set_van(::google::protobuf::uint32 value) {
  set_has_van();
  van_ = value;
}

// required uint32 bike = 8;
inline bool Confidence_Update::has_bike() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Confidence_Update::set_has_bike() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Confidence_Update::clear_has_bike() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Confidence_Update::clear_bike() {
  bike_ = 0u;
  clear_has_bike();
}
inline ::google::protobuf::uint32 Confidence_Update::bike() const {
  return bike_;
}
inline void Confidence_Update::set_bike(::google::protobuf::uint32 value) {
  set_has_bike();
  bike_ = value;
}

// required uint32 bus = 9;
inline bool Confidence_Update::has_bus() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Confidence_Update::set_has_bus() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Confidence_Update::clear_has_bus() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Confidence_Update::clear_bus() {
  bus_ = 0u;
  clear_has_bus();
}
inline ::google::protobuf::uint32 Confidence_Update::bus() const {
  return bus_;
}
inline void Confidence_Update::set_bus(::google::protobuf::uint32 value) {
  set_has_bus();
  bus_ = value;
}

// required uint32 truck = 10;
inline bool Confidence_Update::has_truck() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Confidence_Update::set_has_truck() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Confidence_Update::clear_has_truck() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Confidence_Update::clear_truck() {
  truck_ = 0u;
  clear_has_truck();
}
inline ::google::protobuf::uint32 Confidence_Update::truck() const {
  return truck_;
}
inline void Confidence_Update::set_truck(::google::protobuf::uint32 value) {
  set_has_truck();
  truck_ = value;
}

// -------------------------------------------------------------------

// Message

// required .tn.Message_Type msg_type = 1;
inline bool Message::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::tn::Message_Type Message::msg_type() const {
  return static_cast< ::tn::Message_Type >(msg_type_);
}
inline void Message::set_msg_type(::tn::Message_Type value) {
  assert(::tn::Message_Type_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
}

// optional .tn.Tracker_Min_Update t_min = 2;
inline bool Message::has_t_min() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message::set_has_t_min() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message::clear_has_t_min() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message::clear_t_min() {
  if (t_min_ != NULL) t_min_->::tn::Tracker_Min_Update::Clear();
  clear_has_t_min();
}
inline const ::tn::Tracker_Min_Update& Message::t_min() const {
  return t_min_ != NULL ? *t_min_ : *default_instance_->t_min_;
}
inline ::tn::Tracker_Min_Update* Message::mutable_t_min() {
  set_has_t_min();
  if (t_min_ == NULL) t_min_ = new ::tn::Tracker_Min_Update;
  return t_min_;
}
inline ::tn::Tracker_Min_Update* Message::release_t_min() {
  clear_has_t_min();
  ::tn::Tracker_Min_Update* temp = t_min_;
  t_min_ = NULL;
  return temp;
}
inline void Message::set_allocated_t_min(::tn::Tracker_Min_Update* t_min) {
  delete t_min_;
  t_min_ = t_min;
  if (t_min) {
    set_has_t_min();
  } else {
    clear_has_t_min();
  }
}

// optional .tn.Tracker_Max_Update t_max = 3;
inline bool Message::has_t_max() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Message::set_has_t_max() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Message::clear_has_t_max() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Message::clear_t_max() {
  if (t_max_ != NULL) t_max_->::tn::Tracker_Max_Update::Clear();
  clear_has_t_max();
}
inline const ::tn::Tracker_Max_Update& Message::t_max() const {
  return t_max_ != NULL ? *t_max_ : *default_instance_->t_max_;
}
inline ::tn::Tracker_Max_Update* Message::mutable_t_max() {
  set_has_t_max();
  if (t_max_ == NULL) t_max_ = new ::tn::Tracker_Max_Update;
  return t_max_;
}
inline ::tn::Tracker_Max_Update* Message::release_t_max() {
  clear_has_t_max();
  ::tn::Tracker_Max_Update* temp = t_max_;
  t_max_ = NULL;
  return temp;
}
inline void Message::set_allocated_t_max(::tn::Tracker_Max_Update* t_max) {
  delete t_max_;
  t_max_ = t_max;
  if (t_max) {
    set_has_t_max();
  } else {
    clear_has_t_max();
  }
}

// optional .tn.Tracker_Status_Update t_status = 4;
inline bool Message::has_t_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Message::set_has_t_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Message::clear_has_t_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Message::clear_t_status() {
  if (t_status_ != NULL) t_status_->::tn::Tracker_Status_Update::Clear();
  clear_has_t_status();
}
inline const ::tn::Tracker_Status_Update& Message::t_status() const {
  return t_status_ != NULL ? *t_status_ : *default_instance_->t_status_;
}
inline ::tn::Tracker_Status_Update* Message::mutable_t_status() {
  set_has_t_status();
  if (t_status_ == NULL) t_status_ = new ::tn::Tracker_Status_Update;
  return t_status_;
}
inline ::tn::Tracker_Status_Update* Message::release_t_status() {
  clear_has_t_status();
  ::tn::Tracker_Status_Update* temp = t_status_;
  t_status_ = NULL;
  return temp;
}
inline void Message::set_allocated_t_status(::tn::Tracker_Status_Update* t_status) {
  delete t_status_;
  t_status_ = t_status;
  if (t_status) {
    set_has_t_status();
  } else {
    clear_has_t_status();
  }
}

// optional .tn.Confidence_Update conf = 5;
inline bool Message::has_conf() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Message::set_has_conf() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Message::clear_has_conf() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Message::clear_conf() {
  if (conf_ != NULL) conf_->::tn::Confidence_Update::Clear();
  clear_has_conf();
}
inline const ::tn::Confidence_Update& Message::conf() const {
  return conf_ != NULL ? *conf_ : *default_instance_->conf_;
}
inline ::tn::Confidence_Update* Message::mutable_conf() {
  set_has_conf();
  if (conf_ == NULL) conf_ = new ::tn::Confidence_Update;
  return conf_;
}
inline ::tn::Confidence_Update* Message::release_conf() {
  clear_has_conf();
  ::tn::Confidence_Update* temp = conf_;
  conf_ = NULL;
  return temp;
}
inline void Message::set_allocated_conf(::tn::Confidence_Update* conf) {
  delete conf_;
  conf_ = conf;
  if (conf) {
    set_has_conf();
  } else {
    clear_has_conf();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace tn

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tn::Message_Type>() {
  return ::tn::Message_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tn_5fmessage_2eproto__INCLUDED
